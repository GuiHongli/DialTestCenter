<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.huawei.dialtest.center.mapper.SoftwarePackageMapper">

    <!-- 结果映射 -->
    <resultMap id="BaseResultMap" type="com.huawei.dialtest.center.entity.SoftwarePackage">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="software_name" property="softwareName" jdbcType="VARCHAR"/>
        <result column="platform" property="platform" jdbcType="VARCHAR"/>
        <result column="file_content" property="fileContent" jdbcType="BLOB"/>
        <result column="file_format" property="fileFormat" jdbcType="VARCHAR"/>
        <result column="file_size" property="fileSize" jdbcType="BIGINT"/>
        <result column="sha512" property="sha512" jdbcType="VARCHAR"/>
        <result column="creator" property="creator" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="version" property="version" jdbcType="VARCHAR"/>
    </resultMap>

    <!-- 基础列 -->
    <sql id="Base_Column_List">
        id, software_name, platform, file_content, file_format, file_size, sha512, creator, description, version
    </sql>

    <!-- 动态查询条件 -->
    <sql id="Dynamic_Where_Clause">
        <where>
            <if test="platform != null and platform != ''">
                AND platform = #{platform}
            </if>
            <if test="creator != null and creator != ''">
                AND creator = #{creator}
            </if>
            <if test="softwareName != null and softwareName != ''">
                AND LOWER(software_name) LIKE LOWER(CONCAT('%', #{softwareName}, '%'))
            </if>
        </where>
    </sql>

    <!-- 根据ID查找软件包 -->
    <select id="findById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE id = #{id}
    </select>

    <!-- 根据软件名称查找软件包 -->
    <select id="findBySoftwareName" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE software_name = #{softwareName}
    </select>

    <!-- 根据SHA512哈希值查找软件包 -->
    <select id="findBySha512" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE sha512 = #{sha512}
    </select>

    <!-- 检查软件名称是否已存在 -->
    <select id="existsBySoftwareName" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM software_package
        WHERE software_name = #{softwareName}
    </select>

    <!-- 检查SHA512哈希值是否已存在 -->
    <select id="existsBySha512" resultType="boolean">
        SELECT COUNT(*) > 0
        FROM software_package
        WHERE sha512 = #{sha512}
    </select>

    <!-- 根据平台查找软件包列表（分页） -->
    <select id="findByPlatformOrderByCreatedTimeDesc" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE platform = #{platform}
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{pageNo}
    </select>

    <!-- 根据创建者查找软件包列表（分页） -->
    <select id="findByCreatorOrderByCreatedTimeDesc" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE creator = #{creator}
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{pageNo}
    </select>

    <!-- 根据软件名称模糊查询软件包列表（分页） -->
    <select id="findBySoftwareNameContainingIgnoreCaseOrderByCreatedTimeDesc" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE LOWER(software_name) LIKE LOWER(CONCAT('%', #{softwareName}, '%'))
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{pageNo}
    </select>

    <!-- 根据平台和软件名称模糊查询软件包列表（分页） -->
    <select id="findByPlatformAndSoftwareNameContainingIgnoreCaseOrderByCreatedTimeDesc" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE platform = #{platform}
        AND LOWER(software_name) LIKE LOWER(CONCAT('%', #{softwareName}, '%'))
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{pageNo}
    </select>

    <!-- 获取所有软件包列表（分页，按创建时间倒序） -->
    <select id="findAllByOrderByCreatedTimeDesc" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{pageNo}
    </select>

    <!-- 根据多个条件查询软件包 -->
    <select id="findByConditions" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        <include refid="Dynamic_Where_Clause"/>
        ORDER BY id DESC
        LIMIT #{pageSize} OFFSET #{pageNo}
    </select>

    <!-- 根据平台获取软件包数量 -->
    <select id="countByPlatform" resultType="long">
        SELECT COUNT(*)
        FROM software_package
        WHERE platform = #{platform}
    </select>

    <!-- 根据创建者获取软件包数量 -->
    <select id="countByCreator" resultType="long">
        SELECT COUNT(*)
        FROM software_package
        WHERE creator = #{creator}
    </select>

    <!-- 根据条件统计软件包数量 -->
    <select id="countByConditions" resultType="long">
        SELECT COUNT(*)
        FROM software_package
        <include refid="Dynamic_Where_Clause"/>
    </select>

    <!-- 获取所有软件包数量 -->
    <select id="count" resultType="long">
        SELECT COUNT(*) FROM software_package
    </select>

    <!-- 根据平台获取软件包列表（不分页） -->
    <select id="findByPlatformOrderByCreatedTimeDescNoPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE platform = #{platform}
        ORDER BY id DESC
    </select>

    <!-- 根据创建者获取软件包列表（不分页） -->
    <select id="findByCreatorOrderByCreatedTimeDescNoPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE creator = #{creator}
        ORDER BY id DESC
    </select>

    <!-- 根据软件名称模糊查询软件包列表（不分页） -->
    <select id="findBySoftwareNameContainingIgnoreCaseOrderByCreatedTimeDescNoPage" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM software_package
        WHERE LOWER(software_name) LIKE LOWER(CONCAT('%', #{softwareName}, '%'))
        ORDER BY id DESC
    </select>

    <!-- 插入软件包 -->
    <insert id="insert" parameterType="com.huawei.dialtest.center.entity.SoftwarePackage" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO software_package (
            software_name,
            platform,
            file_content,
            file_format,
            file_size,
            sha512,
            creator,
            description,
            version
        ) VALUES (
            #{softwareName},
            #{platform},
            #{fileContent},
            #{fileFormat},
            #{fileSize},
            #{sha512},
            #{creator},
            #{description},
            #{version}
        )
    </insert>

    <!-- 更新软件包 -->
    <update id="update" parameterType="com.huawei.dialtest.center.entity.SoftwarePackage">
        UPDATE software_package
        SET software_name = #{softwareName},
            platform = #{platform},
            file_content = #{fileContent},
            file_format = #{fileFormat},
            file_size = #{fileSize},
            sha512 = #{sha512},
            creator = #{creator},
            description = #{description},
            version = #{version}
        WHERE id = #{id}
    </update>

    <!-- 根据ID删除软件包 -->
    <delete id="deleteById">
        DELETE FROM software_package WHERE id = #{id}
    </delete>

</mapper>
