---
globs: *.java
description: Javadoc documentation requirements for Java classes and methods
---

# Javadoc Documentation Requirements

## MANDATORY File Header Rules
- **All Java files must have copyright header comment**
- **Copyright header must be placed at the very top of the file**
- **Copyright header must be placed before package declaration**

## Copyright Header Format
```java
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */

package com.example.package;
```

## MANDATORY Import Package Rules
- **Import packages must be sorted in specific order**
- **Each group must be separated by one empty line**
- **Use alphabetical order within each group**

## Import Package Order
1. **Android packages** (android.*)
2. **Huawei company packages** (com.huawei.*)
3. **Other commercial organizations** (com.company.*)
4. **Other open source organizations** (org.apache.*, org.springframework.*, etc.)
5. **Other open source third-party** (com.fasterxml.*, com.google.*, etc.)
6. **Net/Org open source organizations** (net.sourceforge.*, org.junit.*, etc.)
7. **Java standard packages** (java.*, javax.*)

## Import Package Example
```java
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */

package com.dialtest.center.entity;

import android.content.Context;

import com.huawei.agconnect.AGConnectInstance;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.fasterxml.jackson.annotation.JsonIgnore;

import org.junit.Before;
import org.junit.Test;

import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
```

## MANDATORY Javadoc Rules
- **All public classes must have Javadoc comments**
- **All public methods must have Javadoc comments**
- **Use standard Javadoc format with /** */**

## Class Javadoc Requirements
```java
/**
 * 功能描述：类的详细功能说明
 * 可以包含多行描述，说明类的主要用途和功能
 * 
 * @author g00940940
 * @since 2025-09-06
 */
public class ClassName {
    // class implementation
}
```

## Method Javadoc Requirements
```java
/**
 * 方法功能描述
 * 
 * @param paramName 参数描述
 * @return 返回值描述
 * @throws ExceptionType 异常描述
 * @author g00940940
 * @since 2025-09-06
 */
public ReturnType methodName(ParamType paramName) throws ExceptionType {
    // method implementation
}
```

## Javadoc Standards
- **@author**: Always use "g00940940"
- **@since**: Use ISO_DATE format (YYYY-MM-DD) from Java 8 time package
- **Language**: Use Chinese for descriptions
- **Content**: Provide clear, concise descriptions
- **Parameters**: Document all parameters with @param
- **Return Values**: Document return values with @return
- **Exceptions**: Document thrown exceptions with @throws

## Complete File Example
```java
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */

package com.dialtest.center.entity;

import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * 用例集实体类，用于存储和管理测试用例集信息
 * 支持ZIP和TAR.GZ格式的文件存储，包含文件内容、格式、大小等元数据
 * 
 * @author g00940940
 * @since 2025-09-06
 */
@Entity
@Table(name = "test_case_set")
public class TestCaseSet {
    // entity implementation
}
```

## Service Class Example
```java
/**
 * 用例集服务类，提供用例集的业务逻辑处理
 * 包括上传、下载、删除、查询等操作
 * 
 * @author g00940940
 * @since 2025-09-06
 */
@Service
public class TestCaseSetService {
    // service implementation
}
```

## Controller Class Example
```java
/**
 * 用例集控制器，提供用例集管理的REST API接口
 * 支持用例集的上传、下载、查询、删除等操作
 * 
 * @author g00940940
 * @since 2025-09-06
 */
@RestController
@RequestMapping("/api/test-case-sets")
public class TestCaseSetController {
    // controller implementation
}
```

## Test Class Example
```java
/**
 * 用例集实体测试类，测试TestCaseSet实体的各种功能
 * 包括构造函数、getter/setter、equals/hashCode、toString等方法
 * 
 * @author g00940940
 * @since 2025-09-06
 */
public class TestCaseSetTest {
    // test implementation
}
```