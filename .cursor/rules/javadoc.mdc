---
globs: *.java
description: Javadoc documentation requirements for Java classes and methods
---

# Javadoc Documentation Requirements

## MANDATORY File Header Rules
- **All Java files must have copyright header comment**
- **Copyright header must be placed at the very top of the file**
- **Copyright header must be placed before package declaration**

## Copyright Header Format
```java
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */

package com.example.package;
```

## MANDATORY Import Package Rules
- **Import packages must be sorted in specific order**
- **Each group must be separated by one empty line**
- **Use alphabetical order within each group**

## Import Package Order
1. **Android packages** (android.*)
2. **Huawei company packages** (com.huawei.*)
3. **Other commercial organizations** (com.company.*)
4. **Other open source organizations** (org.apache.*, org.springframework.*, etc.)
5. **Other open source third-party** (com.fasterxml.*, com.google.*, etc.)
6. **Net/Org open source organizations** (net.sourceforge.*, org.junit.*, etc.)
7. **Java standard packages** (java.*, javax.*)

## Import Package Example
```java
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */

package com.dialtest.center.entity;

import android.content.Context;

import com.huawei.agconnect.AGConnectInstance;

import org.springframework.data.domain.Page;
import org.springframework.data.domain.PageRequest;
import org.springframework.data.domain.Pageable;

import com.fasterxml.jackson.annotation.JsonIgnore;

import org.junit.Before;
import org.junit.Test;

import java.time.LocalDateTime;
import java.util.Objects;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.Table;
```

## MANDATORY Javadoc Rules
- **All public classes must have Javadoc comments**
- **All public methods must have Javadoc comments**
- **Use standard Javadoc format with /** */**

## Class Javadoc Requirements
```java
/**
 * 功能描述：类的详细功能说明
 * 可以包含多行描述，说明类的主要用途和功能
 * 
 * @author g00940940
 * @since 2025-09-06
 */
public class ClassName {
    // class implementation
}
```

## Method Javadoc Requirements
- **Function Description**: Provide clear description of method functionality
- **Empty Line**: One empty line between description and tags
- **Tags Order**: Use @param, @return, @throws in order as needed
- **@param**: Document all parameters with clear descriptions
- **@return**: Document return value with clear descriptions
- **@throws**: Document all thrown exceptions with clear descriptions

## Method Javadoc Format
```java
/**
 * 方法功能描述，详细说明方法的作用和功能
 * 可以包含多行描述，说明方法的主要用途和实现逻辑
 * 
 * @param paramName 参数描述，说明参数的作用和约束条件
 * @param anotherParam 另一个参数的描述
 * @return 返回值描述，说明返回值的类型和含义
 * @throws ExceptionType 异常描述，说明什么情况下会抛出此异常
 */
public ReturnType methodName(ParamType paramName, AnotherType anotherParam) throws ExceptionType {
    // method implementation
}
```

## Method Javadoc Examples

### Simple Method
```java
/**
 * 获取用例集名称
 * 
 * @return 用例集名称字符串
 */
public String getName() {
    return name;
}
```

### Method with Parameters
```java
/**
 * 设置用例集名称
 * 
 * @param name 用例集名称，不能为空
 */
public void setName(String name) {
    this.name = name;
}
```

### Method with Parameters and Return Value
```java
/**
 * 上传用例集文件
 * 
 * @param file 用例集文件，支持.zip和.tar.gz格式
 * @param description 用例集描述信息
 * @return 保存后的用例集实体对象
 * @throws IOException 文件读取失败时抛出
 */
public TestCaseSet uploadTestCaseSet(MultipartFile file, String description) throws IOException {
    // method implementation
}
```

## Javadoc Standards
- **Class Level**: Use @author "g00940940" and @since "YYYY-MM-DD" format
- **Method Level**: Only use @param, @return, @throws tags as needed
- **Language**: Use Chinese for descriptions
- **Content**: Provide clear, concise descriptions
- **Parameters**: Document all parameters with @param
- **Return Values**: Document return values with @return
- **Exceptions**: Document thrown exceptions with @throws
- **Empty Line**: One empty line between description and tags


## Complete File Example
```java
/*
 * Copyright (c) Huawei Technologies Co., Ltd. 2020-2020. All rights reserved.
 */

package com.dialtest.center.entity;

import javax.persistence.Entity;
import javax.persistence.Table;

/**
 * 用例集实体类，用于存储和管理测试用例集信息
 * 支持ZIP和TAR.GZ格式的文件存储，包含文件内容、格式、大小等元数据
 * 
 * @author g00940940
 * @since 2025-09-06
 */
@Entity
@Table(name = "test_case_set")
public class TestCaseSet {
    
    /**
     * 获取用例集名称
     * 
     * @return 用例集名称字符串
     */
    public String getName() {
        return name;
    }
    
    /**
     * 设置用例集名称
     * 
     * @param name 用例集名称，不能为空
     */
    public void setName(String name) {
        this.name = name;
    }
    
    /**
     * 上传用例集文件
     * 
     * @param file 用例集文件，支持.zip和.tar.gz格式
     * @return 保存后的用例集实体对象
     * @throws IOException 文件读取失败时抛出
     */
    public TestCaseSet uploadTestCaseSet(MultipartFile file) throws IOException {
        // 处理文件上传逻辑
        TestCaseSet result = processFile(file);
        return result;
    }
    
    // other methods...
}
```

## Service Class Example
```java
/**
 * 用例集服务类，提供用例集的业务逻辑处理
 * 包括上传、下载、删除、查询等操作
 * 
 * @author g00940940
 * @since 2025-09-06
 */
@Service
public class TestCaseSetService {
    
    /**
     * 上传用例集文件
     * 
     * @param file 用例集文件，支持.zip和.tar.gz格式
     * @param description 用例集描述信息
     * @return 保存后的用例集实体对象
     * @throws IOException 文件读取失败时抛出
     */
    public TestCaseSet uploadTestCaseSet(MultipartFile file, String description) throws IOException {
        // 验证文件格式
        validateFileFormat(file);
        
        // 保存文件
        TestCaseSet result = saveTestCaseSet(file, description);
        return result;
    }
}
```

## Controller Class Example
```java
/**
 * 用例集控制器，提供用例集管理的REST API接口
 * 支持用例集的上传、下载、查询、删除等操作
 * 
 * @author g00940940
 * @since 2025-09-06
 */
@RestController
@RequestMapping("/api/test-case-sets")
public class TestCaseSetController {
    
    /**
     * 获取用例集列表
     * 
     * @param page 页码，从0开始
     * @param size 每页大小
     * @return 用例集分页数据
     */
    @GetMapping
    public ResponseEntity<Page<TestCaseSet>> getTestCaseSets(@RequestParam(defaultValue = "0") int page,
                                                           @RequestParam(defaultValue = "10") int size) {
        Page<TestCaseSet> result = testCaseSetService.getTestCaseSets(page, size);
        return ResponseEntity.ok(result);
    }
}
```

## Test Class Example
```java
/**
 * 用例集实体测试类，测试TestCaseSet实体的各种功能
 * 包括构造函数、getter/setter、equals/hashCode、toString等方法
 * 
 * @author g00940940
 * @since 2025-09-06
 */
public class TestCaseSetTest {
    
    /**
     * 测试默认构造函数
     */
    @Test
    public void testDefaultConstructor() {
        TestCaseSet testCaseSet = new TestCaseSet();
        assertNotNull(testCaseSet);
    }
}
```